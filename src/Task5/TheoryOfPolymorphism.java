package Task5;

public class TheoryOfPolymorphism {
    /*
Вопросы:
1. Как ты понимаешь полиморфизм.
2. Рассказать про позднее и ранее связывание в java. Сказать к чему это относиться - к наследованию или полиморфизму?
3. Привести 2 примера из жизни полиморфизма (под каждый тип)
4. класс А имеет статический метод, класс Б наследует А. Сказать можем ли мы переопределить статический метод. Если да почему/если нет почему.
5. Что такое перегрузка и перезагрузка методов (Override and Overload)
6. Чем отличается оператор this от super где это используется.

Ответы:
1. Полиморфизм - это общий метод совокупности объектов, который позволяет менять код во время его исполнения
с помощью вызова метода класса наследника , т.е. общий метод может быть переопределен с помощью
конструктора :
СуперКласс суперКласс =  new КлассНаследник(); <---- это и есть полиморфизм (динамическое(позднее) связывание) ;
суперКласс.метод(суперКласс);

2. В языке Java выделяют два вызова метода с классом -> связывания (наличие связи между ссылкой и кодом) :

Оба вида связывания относятся к полиморфизму.
2.1 В статическом связывании вызов метода связан с телом метода во время компиляции.
Это также известно как раннее связывание.

2.2. В динамическом связывании (полиморфизм) вызов метода связан с телом метода во время выполнения.
Это также известно как позднее связывание. Делается с помощью методов экземпляра.

Исходя из того, что раннее связывание выполняется на этапе компиляции, а позднее - в рантайме,
первый вариант обладает лучшим быстродействием, однако второй необходим для реализации полиморфизма.
3.             *Мэйн*
                Спорт спорт = новый Тяжелая_атлетика();
                спорт.тренирвка() <-  вызов метода(Тяжелая_атлетика)
                                \
                                Спорт
                                тренировка()
                                 /          \
Тяжелая_атлетика расширяет Спорт()            Легкая_атлетика расширяет Спорт()
трениовка()                                   тренировка()

4. Статические методы не могут быть переопределены в классах потомках. Они принадлежат статическому классу.
5. Override - св-во позволяющее подклассу обеспечить реализацию метода класса потомка,
   при этом метод в подклассе имеет то же имя, те же параметры или сигнатуру и тот же тип
   возвращаемого значения (или подтип), что и метод в его суперклассе.

   Overload - св-во позволяющее различным методам иметь одно и то же имя, но разные
   сигнатуры, где сигнатура может отличаться по количеству входных параметров или типу
   входных параметров, либо по обоим параметрам. Перегрузка связана с полиморфизмом
   времени компиляции (или статическим).

6. this - представляет текущий экземпляр класса;
можем указать метод

   super - текущий метод класса родителя, вызывается из класса потомка;
7.Рефлексия - это механизм исследования данных о программе, а также изменения структуры и поведения программы
во время ее выполнения.
     */
}
