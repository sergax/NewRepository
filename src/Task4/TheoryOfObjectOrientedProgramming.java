package Task4;

public class TheoryOfObjectOrientedProgramming {

    /*
1. Какой самый главный класс?
   Object

2. Опиши основные методы. Как думаешь, зачем они?
2.1. Часто используемые :
   - toString() - возвращает объект в виде строки ;
   - equals() - сравнение двух объектов ;
   - hashCode() - (int) числовое представление объекта. Значение по-умолчанию - целочисленный адрес в памяти ;
2.2. Синхронизация потоков :
   - notify() - продолжает работу потока, у которого ранее был вызван метод wait() ;
   - notifyAll() - возобновляет работу всех потоков, у которых ранее был вызван метод wait() ;
   - wait() - переводит один поток в ожидание, пока другой поток не вызовет notify()/notifyAll() ;
2.3. Остольные :
   - getClass() - извлекает соответствующую информацию из объекта ;
   - clone() - возвращает экземпляр объекта с копированными полями-примитивами и ссылками ;
   - finalize() - предназначен этот метод для автоматического освобождения системных ресурсов,
   занимаемых объектом, на котором будет данный метод вызван;

3. Скажи, с помощью чего в Java реализовано наследование?
- ключевое слово extends ;
3.1. Можем ли мы наследовать несколько классов одновременно?
- нет, язык Java не поддерживает множественное наследование классов , но оно поддерживается между интерфейсами ;
3.2. Зачем нам абстрактный класс когда есть обычный?
- абстрактный класс служит для описания желаемой сущности, и позволяет сохранять реализацию каждого класса наследника
в самом себе (т.е. каждый унаследованный тип сохраняет свои собственные данные в своем собственном формате) ;
4. Что такое инкапсуляция. Зачем она нужна. Какие преймущества нам дает?
- Инкапсуляция - это мех-зм объединяющий методы и код в один объект, с целью ограничения доступа к объекту из вне.
Сокрытие данных от изменений - поддержание объекта в целосности.Контроль за корректным состоянием объекта,
удобство для пользователя за счет интерфейса, изменения в коде не отражаются на пользователе.
     */
}
